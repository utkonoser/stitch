#!/bin/bash

# –ü–∞–π–ø–ª–∞–π–Ω –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PNG ‚Üí SVG ‚Üí DST
set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_info()    { echo -e "${BLUE}[INFO]${NC} $1"; }
print_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
print_error()   { echo -e "${RED}[ERROR]${NC} $1"; }

show_help() {
    echo "–ü–∞–π–ø–ª–∞–π–Ω –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PNG ‚Üí SVG ‚Üí DST"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏] <–≤—Ö–æ–¥–Ω–æ–π_—Ñ–∞–π–ª.png>"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -o, --output FILE     –í—ã—Ö–æ–¥–Ω–æ–π DST —Ñ–∞–π–ª (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: <–≤—Ö–æ–¥–Ω–æ–π>.dst)"
    echo "  --keep-svg            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π SVG —Ñ–∞–π–ª"
    echo "  --contour-step N      –®–∞–≥ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ path (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 10.0)"
    echo "  --contour-width N     –®–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç—É—Ä–∞ –≤ —Å—Ç–µ–∂–∫–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)"
    echo "  -h, --help            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 image.png"
    echo "  $0 image.png --contour-step 5.0"
    echo "  $0 image.png --fill-type parallel --fill-spacing 3.0"
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
INPUT_FILE=""
OUTPUT_FILE=""
KEEP_SVG=false
FILL_TYPE="none"
FILL_SPACING=2.0
CONTOUR_STEP=10.0
CONTOUR_WIDTH=1

while [[ $# -gt 0 ]]; do
    case $1 in
        -o|--output)
            OUTPUT_FILE="$2"
            shift 2
            ;;
        --keep-svg)
            KEEP_SVG=true
            shift
            ;;
        --fill-type)
            FILL_TYPE="$2"
            shift 2
            ;;
        --fill-spacing)
            FILL_SPACING="$2"
            shift 2
            ;;
        --contour-step)
            CONTOUR_STEP="$2"
            shift 2
            ;;
        --contour-width)
            CONTOUR_WIDTH="$2"
            shift 2
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        -* )
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
        * )
            if [[ -z "$INPUT_FILE" ]]; then
                INPUT_FILE="$1"
            else
                print_error "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"
                show_help
                exit 1
            fi
            shift
            ;;
    esac
    
    # –ù–µ –∑–∞–±—ã–≤–∞–µ–º —Å–¥–≤–∏–≥–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ shift –≤—ã—à–µ
    if [[ "$1" != -* && -n "$1" ]]; then
        shift
    fi

done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
if [[ -z "$INPUT_FILE" ]]; then
    print_error "–ù–µ —É–∫–∞–∑–∞–Ω –≤—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª"
    show_help
    exit 1
fi
if [[ ! -f "$INPUT_FILE" ]]; then
    print_error "–í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $INPUT_FILE"
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
if [[ -z "$OUTPUT_FILE" ]]; then
    OUTPUT_FILE="${INPUT_FILE%.*}.dst"
fi
SVG_FILE="${INPUT_FILE%.*}.svg"
PBM_FILE="${INPUT_FILE%.*}.pbm"

print_info "–ü–ê–ô–ü–õ–ê–ô–ù –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò PNG ‚Üí SVG ‚Üí DST"
print_info "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ vpype
if ! command -v vpype &> /dev/null; then
    print_error "vpype –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    exit 1
fi

# –®–∞–≥ 1: PNG/JPG/BMP/TIFF ‚Üí PBM (–¥–ª—è potrace)
print_info "–®–∞–≥ 1: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º $INPUT_FILE –≤ PBM..."
if magick "$INPUT_FILE" "$PBM_FILE"; then
    print_success "PBM —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: $PBM_FILE"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PBM —Ñ–∞–π–ª–∞"
    exit 1
fi

print_info "–®–∞–≥ 2: –¢—Ä–∞—Å—Å–∏—Ä—É–µ–º PBM –≤ SVG —á–µ—Ä–µ–∑ potrace..."
if potrace "$PBM_FILE" -s -o "$SVG_FILE"; then
    print_success "SVG —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: $SVG_FILE"
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–µ PBM –≤ SVG"
    exit 1
fi

rm "$PBM_FILE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ª–∏–≤–∫–∏
if [[ "$FILL_TYPE" != "none" && "$FILL_TYPE" != "parallel" ]]; then
    print_error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∑–∞–ª–∏–≤–∫–∏: $FILL_TYPE. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: none, parallel"
    exit 1
fi

# –®–∞–≥ 3: SVG ‚Üí DST (—á–µ—Ä–µ–∑ svg_to_dst.py)
print_info "–®–∞–≥ 3: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º $SVG_FILE –≤ DST..."
print_info "–¢–∏–ø –∑–∞–ª–∏–≤–∫–∏: $FILL_TYPE, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: $FILL_SPACING, —à–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç—É—Ä–∞: $CONTOUR_WIDTH"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é svg_to_dst –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
cd svg_to_dst
if python3 svg_to_dst.py --svg-file "../$SVG_FILE" --contour-step "$CONTOUR_STEP" --contour-width "$CONTOUR_WIDTH"; then
    print_success "DST —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º DST —Ñ–∞–π–ª –≤ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ
    DST_TEMP_FILE="$(basename "$SVG_FILE" .svg).dst"
    if [[ -f "$DST_TEMP_FILE" ]]; then
        mv "$DST_TEMP_FILE" "../$OUTPUT_FILE"
        print_success "DST —Ñ–∞–π–ª –ø–µ—Ä–µ–º–µ—â—ë–Ω: $OUTPUT_FILE"
    else
        print_error "DST —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $DST_TEMP_FILE"
        cd ..
        exit 1
    fi
else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ DST —Ñ–∞–π–ª–∞"
    cd ..
    exit 1
fi
cd ..

if [[ ! -f "$OUTPUT_FILE" ]]; then
    print_error "DST —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω: $OUTPUT_FILE"
    exit 1
fi

INPUT_SIZE=$(stat -f%z "$INPUT_FILE" 2>/dev/null || stat -c%s "$INPUT_FILE" 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
SVG_SIZE=$(stat -f%z "$SVG_FILE" 2>/dev/null || stat -c%s "$SVG_FILE" 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
DST_SIZE=$(stat -f%z "$OUTPUT_FILE" 2>/dev/null || stat -c%s "$OUTPUT_FILE" 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

print_info "=================================================="
print_info "–†–ï–ó–£–õ–¨–¢–ê–¢ –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò:"
print_info "–í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: $INPUT_FILE ($INPUT_SIZE –±–∞–π—Ç)"
print_info "SVG —Ñ–∞–π–ª: $SVG_FILE ($SVG_SIZE –±–∞–π—Ç)"
print_info "DST —Ñ–∞–π–ª: $OUTPUT_FILE ($DST_SIZE –±–∞–π—Ç)"

if [[ "$KEEP_SVG" == false ]]; then
    print_info "–£–¥–∞–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π SVG —Ñ–∞–π–ª..."
    rm -f "$SVG_FILE"
else
    print_info "–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π SVG —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $SVG_FILE"
fi

print_success "=================================================="
print_success "üéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
print_success "–§–∞–π–ª –≤—ã—à–∏–≤–∫–∏ –≥–æ—Ç–æ–≤: $OUTPUT_FILE" 